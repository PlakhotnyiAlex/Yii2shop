version: '3.2'

services:
  frontend-php:
    build: frontend
    depends_on:
      - mysql
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app

  backend-php:
    build: backend
    depends_on:
      - mysql
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
  frontend:
    image: nginx
    ports:
      - '8080:80'
    volumes:
      - ./:/app
      - ./nginx/front/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - frontend-php
  backend:
    image: nginx
    ports:
      - '8081:80'
    volumes:
      - ./:/app
      - ./nginx/back/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - backend-php
  mysql:
    image: mysql:8
    ports:
        - "3307:80"
      # Задаем пароль для root пользователя
    depends_on:
      - elasticsearch
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - "./data/mysql:/var/lib/mysql"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
    restart: always
    environment:
        PMA_HOST: mysql
    ports:
      - '8084:80'
    depends_on:
      - mysql
  static:
    image: nginx
    ports:
      - '8085:80'
    volumes:
      - ./static:/app/static
      - ./nginx/static/log/:/app/log/
      - ./nginx/static/conf.d/:/etc/nginx/conf.d/
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.0
    restart: always
    environment:
      - node.name=elasticsearch
      - cluster.name=elastic-cluster
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ingest.geoip.downloader.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es/esdata:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    volumes:
      - ./es/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - '5601:5601'
  api-php:
    build: api
    depends_on:
      - mysql
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
  api:
    image: nginx
    ports:
      - '8090:80'
    volumes:
      - ./:/app
      - ./nginx/api/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - api-php
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
